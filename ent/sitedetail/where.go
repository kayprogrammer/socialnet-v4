// Code generated by ent, DO NOT EDIT.

package sitedetail

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
	"github.com/kayprogrammer/socialnet-v4/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldUpdatedAt, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldName, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldEmail, v))
}

// Phone applies equality check predicate on the "phone" field. It's identical to PhoneEQ.
func Phone(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldPhone, v))
}

// Address applies equality check predicate on the "address" field. It's identical to AddressEQ.
func Address(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldAddress, v))
}

// Fb applies equality check predicate on the "fb" field. It's identical to FbEQ.
func Fb(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldFb, v))
}

// Tw applies equality check predicate on the "tw" field. It's identical to TwEQ.
func Tw(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldTw, v))
}

// Wh applies equality check predicate on the "wh" field. It's identical to WhEQ.
func Wh(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldWh, v))
}

// Ig applies equality check predicate on the "ig" field. It's identical to IgEQ.
func Ig(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldIg, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldUpdatedAt, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContainsFold(FieldName, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContainsFold(FieldEmail, v))
}

// PhoneEQ applies the EQ predicate on the "phone" field.
func PhoneEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldPhone, v))
}

// PhoneNEQ applies the NEQ predicate on the "phone" field.
func PhoneNEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldPhone, v))
}

// PhoneIn applies the In predicate on the "phone" field.
func PhoneIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldPhone, vs...))
}

// PhoneNotIn applies the NotIn predicate on the "phone" field.
func PhoneNotIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldPhone, vs...))
}

// PhoneGT applies the GT predicate on the "phone" field.
func PhoneGT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldPhone, v))
}

// PhoneGTE applies the GTE predicate on the "phone" field.
func PhoneGTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldPhone, v))
}

// PhoneLT applies the LT predicate on the "phone" field.
func PhoneLT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldPhone, v))
}

// PhoneLTE applies the LTE predicate on the "phone" field.
func PhoneLTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldPhone, v))
}

// PhoneContains applies the Contains predicate on the "phone" field.
func PhoneContains(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContains(FieldPhone, v))
}

// PhoneHasPrefix applies the HasPrefix predicate on the "phone" field.
func PhoneHasPrefix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasPrefix(FieldPhone, v))
}

// PhoneHasSuffix applies the HasSuffix predicate on the "phone" field.
func PhoneHasSuffix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasSuffix(FieldPhone, v))
}

// PhoneEqualFold applies the EqualFold predicate on the "phone" field.
func PhoneEqualFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEqualFold(FieldPhone, v))
}

// PhoneContainsFold applies the ContainsFold predicate on the "phone" field.
func PhoneContainsFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContainsFold(FieldPhone, v))
}

// AddressEQ applies the EQ predicate on the "address" field.
func AddressEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldAddress, v))
}

// AddressNEQ applies the NEQ predicate on the "address" field.
func AddressNEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldAddress, v))
}

// AddressIn applies the In predicate on the "address" field.
func AddressIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldAddress, vs...))
}

// AddressNotIn applies the NotIn predicate on the "address" field.
func AddressNotIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldAddress, vs...))
}

// AddressGT applies the GT predicate on the "address" field.
func AddressGT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldAddress, v))
}

// AddressGTE applies the GTE predicate on the "address" field.
func AddressGTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldAddress, v))
}

// AddressLT applies the LT predicate on the "address" field.
func AddressLT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldAddress, v))
}

// AddressLTE applies the LTE predicate on the "address" field.
func AddressLTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldAddress, v))
}

// AddressContains applies the Contains predicate on the "address" field.
func AddressContains(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContains(FieldAddress, v))
}

// AddressHasPrefix applies the HasPrefix predicate on the "address" field.
func AddressHasPrefix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasPrefix(FieldAddress, v))
}

// AddressHasSuffix applies the HasSuffix predicate on the "address" field.
func AddressHasSuffix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasSuffix(FieldAddress, v))
}

// AddressEqualFold applies the EqualFold predicate on the "address" field.
func AddressEqualFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEqualFold(FieldAddress, v))
}

// AddressContainsFold applies the ContainsFold predicate on the "address" field.
func AddressContainsFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContainsFold(FieldAddress, v))
}

// FbEQ applies the EQ predicate on the "fb" field.
func FbEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldFb, v))
}

// FbNEQ applies the NEQ predicate on the "fb" field.
func FbNEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldFb, v))
}

// FbIn applies the In predicate on the "fb" field.
func FbIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldFb, vs...))
}

// FbNotIn applies the NotIn predicate on the "fb" field.
func FbNotIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldFb, vs...))
}

// FbGT applies the GT predicate on the "fb" field.
func FbGT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldFb, v))
}

// FbGTE applies the GTE predicate on the "fb" field.
func FbGTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldFb, v))
}

// FbLT applies the LT predicate on the "fb" field.
func FbLT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldFb, v))
}

// FbLTE applies the LTE predicate on the "fb" field.
func FbLTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldFb, v))
}

// FbContains applies the Contains predicate on the "fb" field.
func FbContains(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContains(FieldFb, v))
}

// FbHasPrefix applies the HasPrefix predicate on the "fb" field.
func FbHasPrefix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasPrefix(FieldFb, v))
}

// FbHasSuffix applies the HasSuffix predicate on the "fb" field.
func FbHasSuffix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasSuffix(FieldFb, v))
}

// FbEqualFold applies the EqualFold predicate on the "fb" field.
func FbEqualFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEqualFold(FieldFb, v))
}

// FbContainsFold applies the ContainsFold predicate on the "fb" field.
func FbContainsFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContainsFold(FieldFb, v))
}

// TwEQ applies the EQ predicate on the "tw" field.
func TwEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldTw, v))
}

// TwNEQ applies the NEQ predicate on the "tw" field.
func TwNEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldTw, v))
}

// TwIn applies the In predicate on the "tw" field.
func TwIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldTw, vs...))
}

// TwNotIn applies the NotIn predicate on the "tw" field.
func TwNotIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldTw, vs...))
}

// TwGT applies the GT predicate on the "tw" field.
func TwGT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldTw, v))
}

// TwGTE applies the GTE predicate on the "tw" field.
func TwGTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldTw, v))
}

// TwLT applies the LT predicate on the "tw" field.
func TwLT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldTw, v))
}

// TwLTE applies the LTE predicate on the "tw" field.
func TwLTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldTw, v))
}

// TwContains applies the Contains predicate on the "tw" field.
func TwContains(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContains(FieldTw, v))
}

// TwHasPrefix applies the HasPrefix predicate on the "tw" field.
func TwHasPrefix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasPrefix(FieldTw, v))
}

// TwHasSuffix applies the HasSuffix predicate on the "tw" field.
func TwHasSuffix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasSuffix(FieldTw, v))
}

// TwEqualFold applies the EqualFold predicate on the "tw" field.
func TwEqualFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEqualFold(FieldTw, v))
}

// TwContainsFold applies the ContainsFold predicate on the "tw" field.
func TwContainsFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContainsFold(FieldTw, v))
}

// WhEQ applies the EQ predicate on the "wh" field.
func WhEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldWh, v))
}

// WhNEQ applies the NEQ predicate on the "wh" field.
func WhNEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldWh, v))
}

// WhIn applies the In predicate on the "wh" field.
func WhIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldWh, vs...))
}

// WhNotIn applies the NotIn predicate on the "wh" field.
func WhNotIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldWh, vs...))
}

// WhGT applies the GT predicate on the "wh" field.
func WhGT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldWh, v))
}

// WhGTE applies the GTE predicate on the "wh" field.
func WhGTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldWh, v))
}

// WhLT applies the LT predicate on the "wh" field.
func WhLT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldWh, v))
}

// WhLTE applies the LTE predicate on the "wh" field.
func WhLTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldWh, v))
}

// WhContains applies the Contains predicate on the "wh" field.
func WhContains(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContains(FieldWh, v))
}

// WhHasPrefix applies the HasPrefix predicate on the "wh" field.
func WhHasPrefix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasPrefix(FieldWh, v))
}

// WhHasSuffix applies the HasSuffix predicate on the "wh" field.
func WhHasSuffix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasSuffix(FieldWh, v))
}

// WhEqualFold applies the EqualFold predicate on the "wh" field.
func WhEqualFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEqualFold(FieldWh, v))
}

// WhContainsFold applies the ContainsFold predicate on the "wh" field.
func WhContainsFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContainsFold(FieldWh, v))
}

// IgEQ applies the EQ predicate on the "ig" field.
func IgEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEQ(FieldIg, v))
}

// IgNEQ applies the NEQ predicate on the "ig" field.
func IgNEQ(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNEQ(FieldIg, v))
}

// IgIn applies the In predicate on the "ig" field.
func IgIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldIn(FieldIg, vs...))
}

// IgNotIn applies the NotIn predicate on the "ig" field.
func IgNotIn(vs ...string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldNotIn(FieldIg, vs...))
}

// IgGT applies the GT predicate on the "ig" field.
func IgGT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGT(FieldIg, v))
}

// IgGTE applies the GTE predicate on the "ig" field.
func IgGTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldGTE(FieldIg, v))
}

// IgLT applies the LT predicate on the "ig" field.
func IgLT(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLT(FieldIg, v))
}

// IgLTE applies the LTE predicate on the "ig" field.
func IgLTE(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldLTE(FieldIg, v))
}

// IgContains applies the Contains predicate on the "ig" field.
func IgContains(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContains(FieldIg, v))
}

// IgHasPrefix applies the HasPrefix predicate on the "ig" field.
func IgHasPrefix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasPrefix(FieldIg, v))
}

// IgHasSuffix applies the HasSuffix predicate on the "ig" field.
func IgHasSuffix(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldHasSuffix(FieldIg, v))
}

// IgEqualFold applies the EqualFold predicate on the "ig" field.
func IgEqualFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldEqualFold(FieldIg, v))
}

// IgContainsFold applies the ContainsFold predicate on the "ig" field.
func IgContainsFold(v string) predicate.SiteDetail {
	return predicate.SiteDetail(sql.FieldContainsFold(FieldIg, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SiteDetail) predicate.SiteDetail {
	return predicate.SiteDetail(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SiteDetail) predicate.SiteDetail {
	return predicate.SiteDetail(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SiteDetail) predicate.SiteDetail {
	return predicate.SiteDetail(sql.NotPredicates(p))
}
